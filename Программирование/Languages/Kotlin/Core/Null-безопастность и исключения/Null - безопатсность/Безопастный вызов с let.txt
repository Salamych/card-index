let вызывается со значением, и суть в том, чтобы разрешить объявлять переменные 
для выбранной области.

Так как let создает свою область видимости, можно использовать безопастный вызов
с let, чтобы охватить несколько выражений, которые требуют переменной с типом,
не поддерживающим null.

var beverage = readLine()?.let {
        if (it.isNotBlank()) {
            it.capitalize()
        } else {
            "Buttered Ale"
        }
    }
//    beverage = null
    println(beverage)


letддерживает несколько соглашений.

Во-первых, в объявлении beverage использовалось ключевое слово it. Внутри let
ключевое слово it ссылается на переменную, для которой вызванна let, и гарантирует,
что она имеет тип, не поддерживающий null. Вызывая isNotBlank и capitalize с it - формой 
beverage, не поддерживающей null.

Второе соглашение let не так очевидно: let возвращает результаты в неявной форме, поэтому
мы можем (и должны) присвоить этот результат переменной сразу после вычисления нашего выражения.


Свойство может (и должно) инициализироваться с любым значением своего типа,
даже со значением, возвращаемым функцией.

import java.io.File

class Player(_name: String,
             var healthPoints: Int = 100,
             val isBlessed: Boolean,
             private val isImmortal: Boolean) {
    var name = _name
        get() = "${field.capitalize()} of $hometown"
       private set(value) {
            field = value.trim()
        }
    val hometown = selectHomeTown()

    private fun selectHomeTown() = File("data/towns.txt")
        .readText()
        .split(" ")
        .shuffled()
        .first()

Если для инициализации свойства требуется сложная логика, включающая несколько выражений,
ее можно переместить в функцию или блок инициализации.

Правило, которое гласит, что при объявлении свойствам должно быть присвоено значение, не
распространяется на переменные в более узкой области видимости, такой как область видимости
функции.

Свойства имеют более строгие правила инициализации. Это связано с тем, что они доступны
из других классов, если объявлены как общедоступные. Локальные переменные функции, напротив,
существуют только в области видимости функции, в которой объявлены, и не доступны извне. 
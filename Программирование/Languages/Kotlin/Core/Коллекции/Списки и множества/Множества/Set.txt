Множества гарантируют уникальность элементов и не поддерживают возможность
их изменения по индексам, потому что не предусматривают какого-то строго
определенного порядка размещения.

Создание:

val planets = setOf("Mercury", "Venus", "Earth") // только для чтения
planets // [Mercury, Venus, Earth]

val uniquePatrons = mutableSetOf<String>() // создание изменяемого множества
 (0..9).forEach {
        val first = patronList.shuffled().first()
        val last = lastName.shuffled().first()
        val name = "$first $last"
        uniquePatrons += name                       // добавление элементов в множество
    }

Проверка присутсвия конкретного эелемента(ов) - contains  containsAll

planets.contains("Earth") // true

Запрос элемента по определенному индексу - elementAt (доступ к элементу идет линейно и последовательно, 
не рекомендуется для осуществления поиска)

planets.elementAt(2) // Earth

---------------------------Мутаторы--------------------

add - добавляет элемент в множество 

addAll - добавляет все элементы другой коллекции в множество

+= - добавляет элемент(ы) в множество

-= - удаляет элемент(ы) из множества 

remove - удаляет элемент из множества  

removeAll - удаляет из множества все элементы, перечисленные в другой коллекции

clear - удаляет все элементы из множества
Kotlin обычно запрещает проверку типа Т, потому что обобщеные типы подвержены 
эффекту стирания типов - это значит, что информация о типе Т недоступна во время
выполнения. Там где раньше был тип Т, появится Object.

Алючевое слово reified позволяет сохранять информацию о типе во время выполнения программы.
reified используется во встраемых функциях следующим образом:

inline fun <reified T> randomBackupLoot (backupLoot: () -> T): T {
	val items = listOf(Coin(14), Fedora("afedora of the ages", 150))
	val first: Loot = items.shuffled().first()
	return if(first is T){
		first
	} else{
		backupLoot
	}
}

Использование ключевого слова reified позволяет исследовать тип обобщенного параметра без
применения рефлексии (определение имени или типа свойства или функции во время выполнения
программы обычно является ресурсоемкой операцией).
Существует возможность использовать анонимные функции с приемниками, обладающие
мощным эффектом.

public inline fun <T> T.apply (block: T.() -> Unit): T{
	block()
	return this
}

Параметр-функция block является не только лямбдой, но и расширением обобщеного
типа Т: T.() -> Unit. Именно это позволяет лямбде иметь неявный доступ к функциям 
и свойствам экземпляра приемника.

Приемник в лямбде, указанный в расширении, одновременно является экземпляром, для
которого вызывается apply, что открывает доступ к функциям и свойствам приемника 
в теле лямбды.

Подобный стиль позволяет создавать так называемый предметно-ориентированный язык, 
который можно назвать API-подобным. Он использует функции приемника, настроенные 
с использованием лямбда-выражений, объявленных для доступа к ним.
package com.hubbersport.mokito.test_double.fake;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collection;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import static org.mockito.Mockito.*;

public class FakeTest {

    @Test
    public void testFake() {
        BookRepository bookRepository = new FakeBookRepository();
        BookService bookService = new BookService(bookRepository);
        
        bookService.addBook(new Book("1234","Mockito in Action",250,LocalDate.now()));
        bookService.addBook(new Book("1235","JUnit 5 in Action",200,LocalDate.now()));
        
        assertEquals(2,bookService.findNumberOfBooks());
    }
    
    @Test
    public void testFakeWithMockito(){
    BookRepository bookRepository = mock(BookRepository.class); // создание фейкового класса при помощи Mokito
    BookService bookService = new BookService(bookRepository);
    
    Book book1 = new Book("1234","Mockito in Action",250,LocalDate.now());
    Book book2 = new Book("1235","JUnit 5 in Action",200,LocalDate.now());
    
        Collection<Book> books = new ArrayList<>();
        books.add(book1);
        books.add(book2);
        
        when(bookRepository.findAll()).thenReturn(books); // когда происодит обращение к методу bookRepository.findAll() тогда возвращается коллекция books
        
        assertEquals(2,bookService.findNumberOfBooks());
    }
}
